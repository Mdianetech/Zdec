rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow anyone to read approved testimonials
    match /testimonials/{testimonialId} {
      allow read: if resource.data.approved == true;
      
      // Allow authenticated users to create testimonials
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid &&
        request.resource.data.rating is number &&
        request.resource.data.rating >= 1 &&
        request.resource.data.rating <= 5 &&
        request.resource.data.comment is string &&
        request.resource.data.service is string;
      
      // Allow users to read their own testimonials
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Only allow admin to update approval status
      allow update: if request.auth != null && 
        request.auth.token.admin == true;
    }

    // User profiles
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Projects
    match /projects/{projectId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // Quotes
    match /quotes/{quoteId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null;
      allow update: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // Appointments
    match /appointments/{appointmentId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null;
      allow update: if request.auth != null && resource.data.userId == request.auth.uid;
    }
  }
}